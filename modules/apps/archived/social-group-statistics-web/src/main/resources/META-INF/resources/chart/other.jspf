<%--
/*
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */
--%>

<%
SocialActivityCounter highestActivityCounter = null;
SocialActivityCounter lowestActivityCounter = null;

int[] categories = new int[activityCounters.size()];
int[] values = new int[activityCounters.size()];

int currentValue = 0;
int totalValue = 0;

int totalDays = 0;

for (int i = 0; i < activityCounters.size(); i++) {
	SocialActivityCounter activityCounter = activityCounters.get(i);

	if ((highestActivityCounter == null) || (highestActivityCounter.getCurrentValue() < activityCounter.getCurrentValue())) {
		highestActivityCounter = activityCounter;
	}

	if ((lowestActivityCounter == null) || (lowestActivityCounter.getCurrentValue() > activityCounter.getCurrentValue())) {
		lowestActivityCounter = activityCounter;
	}

	categories[i] = i + 1;
	values[i] = activityCounter.getCurrentValue();

	totalValue = totalValue + activityCounter.getCurrentValue();

	if (activityCounter.getEndPeriod() == -1) {
		currentValue = activityCounter.getCurrentValue();

		totalDays = totalDays + SocialCounterPeriodUtil.getActivityDay() - activityCounter.getStartPeriod() + 1;
	}
	else {
		totalDays = totalDays + activityCounter.getEndPeriod() - activityCounter.getStartPeriod() + 1;
	}
}

Format format = FastDateFormatFactoryUtil.getSimpleDateFormat("MMM d");
%>

<aui:row>
	<aui:col cssClass="chart-column" width="<%= chartWidth %>">
		<div class="group-statistics-chart" id="groupStatisticsChart<%= displayActivityCounterNameIndex %>" style="height: <%= displayHeight - 2 %>px;"></div>
	</aui:col>

	<aui:col cssClass="info-column" width="<%= 100 - chartWidth %>">
		<div class="group-statistics-info">
			<liferay-ui:message key="current-value" />: <%= currentValue %><br />

			<liferay-ui:message key="average-activities-per-day" />: <%= Math.round(totalValue / totalDays * 100) / 100 %><br />

			<liferay-ui:message key="highest-activity-period" />: <span class="group-statistics-activity-period">
				<strong>
					<%= format.format(SocialCounterPeriodUtil.getDate(highestActivityCounter.getStartPeriod())) %>
						-
					<c:if test="<%= highestActivityCounter.getEndPeriod() != -1 %>">
						<%= format.format(SocialCounterPeriodUtil.getDate(highestActivityCounter.getEndPeriod())) %>
					</c:if>

					<c:if test="<%= highestActivityCounter.getEndPeriod() == -1 %>">
						<%= format.format(new Date()) %>
					</c:if>
				</strong>
			</span>

			(<%= highestActivityCounter.getCurrentValue() %>)<br />

			<liferay-ui:message key="lowest-activity-period" />: <span class="group-statistics-activity-period">
				<strong>
					<%= format.format(SocialCounterPeriodUtil.getDate(lowestActivityCounter.getStartPeriod())) %>
						-
					<c:if test="<%= lowestActivityCounter.getEndPeriod() != -1 %>">
						<%= format.format(SocialCounterPeriodUtil.getDate(lowestActivityCounter.getEndPeriod())) %>
					</c:if>

					<c:if test="<%= lowestActivityCounter.getEndPeriod() == -1 %>">
						<%= format.format(new Date()) %>
					</c:if>
				</strong>
			</span>

			(<%= lowestActivityCounter.getCurrentValue() %>)<br />
		</div>
	</aui:col>
</aui:row>

<aui:script use="charts">
	var categories = [<%= StringUtil.merge(categories) %>];
	var values = [<%= StringUtil.merge(values) %>];

	var data = [];

	for (var i = 0; i < categories.length; i++) {
		data.push({
			category: categories[i],
			values: values[i],
		});
	}

	var tooltip = {
		markerLabelFunction: function(
			categoryItem,
			valueItem,
			itemIndex,
			series,
			seriesIndex
		) {
			return valueItem.value;
		},

		styles: {
			backgroundColor: '#FFF',
			borderColor: '#4572A7',
			borderWidth: 1,
			color: '#000',
			textAlign: 'center',
			width: 30,
		},
	};

	var chartType;
	var customConfig;

	<c:choose>
		<c:when test='<%= chartType.equals("area") %>'>
			chartType = 'combo';

			customConfig = {
				showAreaFill: true,
				showMarkers: true,
				styles: {
					series: {
						values: {
							area: {
								alpha: 0.4,
								color: '#5CC0FF',
							},
							line: {
								color: '#4572A7',
								weight: 2,
							},
							marker: {
								fill: {
									color: '#3CCFFF',
								},
								height: 6,
							},
						},
					},
				},
			};
		</c:when>
		<c:otherwise>
			chartType = '<%= HtmlUtil.escapeJS(chartType) %>';

			customConfig = {
				showAreaFill: true,
				showMarkers: true,
			};
		</c:otherwise>
	</c:choose>

	var chartContainer = A.one(
		'#groupStatisticsChart<%= displayActivityCounterNameIndex %>'
	);

	var defaultConfig = {
		axes: {
			category: {
				styles: {
					label: {
						display: 'none',
					},
				},
			},
			values: {
				styles: {
					majorUnit: {
						count: 6,
					},
				},
			},
		},
		dataProvider: data,
		height: <%= displayHeight - 2 %>,
		horizontalGridlines: true,
		tooltip: tooltip,
		type: chartType,
		width: chartContainer.width(),
	};

	A.mix(defaultConfig, customConfig);

	var chart = new A.Chart(defaultConfig).render(chartContainer);

	Liferay.after(['portletMoved', 'liferaypanel:collapse'], function(event) {
		var width = chartContainer.width();

		if (
			(width &&
				event.type == 'portletMoved' &&
				event.portletId == '<%= portletDisplay.getId() %>') ||
			(event.type == 'liferaypanel:collapse' &&
				event.panelId ==
					'groupStatisticsPanel<%= displayActivityCounterNameIndex %>')
		) {
			chart.set('width', width);
		}
	});
</aui:script>