/*
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */

package com.liferay.user.groups.admin.uad.anonymizer;

import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.UserGroup;
import com.liferay.portal.kernel.service.UserGroupLocalService;
import com.liferay.user.associated.data.anonymizer.DynamicQueryUADAnonymizer;
import com.liferay.user.groups.admin.uad.constants.UserGroupsAdminUADConstants;

import org.osgi.service.component.annotations.Reference;

/**
 * Provides the base implementation for the user group UAD anonymizer.
 *
 * <p>
 * This implementation exists only as a container for the default methods
 * generated by ServiceBuilder. All custom service methods should be put in
 * {@link UserGroupUADAnonymizer}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @generated
 */
public abstract class BaseUserGroupUADAnonymizer
	extends DynamicQueryUADAnonymizer<UserGroup> {

	@Override
	public void autoAnonymize(
			UserGroup userGroup, long userId, User anonymousUser)
		throws PortalException {

		if (userGroup.getUserId() == userId) {
			userGroup.setUserId(anonymousUser.getUserId());
			userGroup.setUserName(anonymousUser.getFullName());
		}

		userGroupLocalService.updateUserGroup(userGroup);
	}

	@Override
	public void delete(UserGroup userGroup) throws PortalException {
		userGroupLocalService.deleteUserGroup(userGroup);
	}

	@Override
	public Class<UserGroup> getTypeClass() {
		return UserGroup.class;
	}

	@Override
	protected ActionableDynamicQuery doGetActionableDynamicQuery() {
		return userGroupLocalService.getActionableDynamicQuery();
	}

	@Override
	protected String[] doGetUserIdFieldNames() {
		return UserGroupsAdminUADConstants.USER_ID_FIELD_NAMES_USER_GROUP;
	}

	@Reference
	protected UserGroupLocalService userGroupLocalService;

}