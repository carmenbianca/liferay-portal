/*
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */

package com.liferay.document.library.opener.uad.anonymizer;

import com.liferay.document.library.opener.model.DLOpenerFileEntryReference;
import com.liferay.document.library.opener.service.DLOpenerFileEntryReferenceLocalService;
import com.liferay.document.library.opener.uad.constants.DLOpenerUADConstants;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.User;
import com.liferay.user.associated.data.anonymizer.DynamicQueryUADAnonymizer;

import org.osgi.service.component.annotations.Reference;

/**
 * Provides the base implementation for the dl opener file entry reference UAD anonymizer.
 *
 * <p>
 * This implementation exists only as a container for the default methods
 * generated by ServiceBuilder. All custom service methods should be put in
 * {@link DLOpenerFileEntryReferenceUADAnonymizer}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @generated
 */
public abstract class BaseDLOpenerFileEntryReferenceUADAnonymizer
	extends DynamicQueryUADAnonymizer<DLOpenerFileEntryReference> {

	@Override
	public void autoAnonymize(
			DLOpenerFileEntryReference dlOpenerFileEntryReference, long userId,
			User anonymousUser)
		throws PortalException {

		if (dlOpenerFileEntryReference.getUserId() == userId) {
			dlOpenerFileEntryReference.setUserId(anonymousUser.getUserId());
			dlOpenerFileEntryReference.setUserName(anonymousUser.getFullName());
		}

		dlOpenerFileEntryReferenceLocalService.updateDLOpenerFileEntryReference(
			dlOpenerFileEntryReference);
	}

	@Override
	public void delete(DLOpenerFileEntryReference dlOpenerFileEntryReference)
		throws PortalException {

		dlOpenerFileEntryReferenceLocalService.deleteDLOpenerFileEntryReference(
			dlOpenerFileEntryReference);
	}

	@Override
	public Class<DLOpenerFileEntryReference> getTypeClass() {
		return DLOpenerFileEntryReference.class;
	}

	@Override
	protected ActionableDynamicQuery doGetActionableDynamicQuery() {
		return dlOpenerFileEntryReferenceLocalService.
			getActionableDynamicQuery();
	}

	@Override
	protected String[] doGetUserIdFieldNames() {
		return DLOpenerUADConstants.
			USER_ID_FIELD_NAMES_DL_OPENER_FILE_ENTRY_REFERENCE;
	}

	@Reference
	protected DLOpenerFileEntryReferenceLocalService
		dlOpenerFileEntryReferenceLocalService;

}