/*
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */

package com.liferay.layout.uad.anonymizer;

import com.liferay.layout.uad.constants.LayoutUADConstants;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.LayoutBranch;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.service.LayoutBranchLocalService;
import com.liferay.user.associated.data.anonymizer.DynamicQueryUADAnonymizer;

import org.osgi.service.component.annotations.Reference;

/**
 * Provides the base implementation for the layout branch UAD anonymizer.
 *
 * <p>
 * This implementation exists only as a container for the default methods
 * generated by ServiceBuilder. All custom service methods should be put in
 * {@link LayoutBranchUADAnonymizer}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @generated
 */
public abstract class BaseLayoutBranchUADAnonymizer
	extends DynamicQueryUADAnonymizer<LayoutBranch> {

	@Override
	public void autoAnonymize(
			LayoutBranch layoutBranch, long userId, User anonymousUser)
		throws PortalException {

		if (layoutBranch.getUserId() == userId) {
			layoutBranch.setUserId(anonymousUser.getUserId());
			layoutBranch.setUserName(anonymousUser.getFullName());
		}

		layoutBranchLocalService.updateLayoutBranch(layoutBranch);
	}

	@Override
	public void delete(LayoutBranch layoutBranch) throws PortalException {
		layoutBranchLocalService.deleteLayoutBranch(layoutBranch);
	}

	@Override
	public Class<LayoutBranch> getTypeClass() {
		return LayoutBranch.class;
	}

	@Override
	protected ActionableDynamicQuery doGetActionableDynamicQuery() {
		return layoutBranchLocalService.getActionableDynamicQuery();
	}

	@Override
	protected String[] doGetUserIdFieldNames() {
		return LayoutUADConstants.USER_ID_FIELD_NAMES_LAYOUT_BRANCH;
	}

	@Reference
	protected LayoutBranchLocalService layoutBranchLocalService;

}