/*
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */

Closure pomConfigureClosure = {
	project {
		developers {
			developer {
				name = project.properties["pom.developer.name"] ?: "Brian Wing Shun Chan"
				organization = project.properties["pom.developer.organization"] ?: "Liferay, Inc."
				organizationUrl = project.properties["pom.developer.organizationUrl"] ?: "http://www.liferay.com"
			}
		}

		licenses {
			license {
				name = project.properties["pom.license.name"] ?: "LGPL 2.1"
				url = project.properties["pom.license.url"] ?: "http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt"
			}
		}

		scm {
			connection = project.properties["pom.scm.connection"] ?: "scm:git:git@github.com:liferay/liferay-portal.git"
			developerConnection = project.properties["pom.scm.developerConnection"] ?: "scm:git:git@github.com:liferay/liferay-portal.git"
			url = project.properties["pom.scm.url"] ?: "http://github.com/liferay/liferay-portal"
		}
	}
}

tasks.withType(Upload) {
	String taskName = it.name

	repositories {
		if (taskName.startsWith("install")) {
			mavenInstaller {
				pom pomConfigureClosure

				if (taskName == "install") {
					pom.project {
						description = project.description
					}
				}
			}
		}
		else if (taskName.startsWith("upload")) {
			mavenDeployer {
				pom pomConfigureClosure

				if (taskName == "uploadArchives") {
					pom.project {
						description = project.description
					}
				}

				String repositoryURL = project.properties["sonatype.release.url"]

				if (repositoryURL == null) {
					repositoryURL = "https://repository-cdn.liferay.com/nexus/content/repositories/liferay-public-releases"
				}

				if (project.path.startsWith(":dxp:") && !project.path.endsWith("-api") && !project.path.endsWith("-spi") && repositoryURL.equals("https://repository-cdn.liferay.com/nexus/content/repositories/liferay-public-releases")) {
					repositoryURL = "https://repository-cdn.liferay.com/nexus/content/repositories/liferay-private-releases"
				}

				repository(url: repositoryURL) {
					authentication password: project.properties["sonatype.release.password"], userName: project.properties["sonatype.release.username"]
				}

				String snapshotRepositoryURL = project.properties["sonatype.snapshot.url"]

				if (snapshotRepositoryURL == null) {
					snapshotRepositoryURL = "https://repository-cdn.liferay.com/nexus/content/repositories/liferay-public-snapshots"
				}

				if (project.path.startsWith(":dxp:") && !project.path.endsWith("-api") && !project.path.endsWith("-spi") && snapshotRepositoryURL.equals("https://repository-cdn.liferay.com/nexus/content/repositories/liferay-public-snapshots")) {
					snapshotRepositoryURL = "https://repository-cdn.liferay.com/nexus/content/repositories/liferay-private-snapshots"
				}

				snapshotRepository(url: snapshotRepositoryURL) {
					authentication password: project.properties["sonatype.snapshot.password"], userName: project.properties["sonatype.snapshot.username"]
				}
			}
		}
	}
}